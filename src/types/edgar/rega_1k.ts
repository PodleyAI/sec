// Code generated by xgen. DO NOT EDIT.

import * as common from './common';

// SUBMISSION_TYPE is Enumerated values and descriptions: 1-K: Annual Report Pursuant to Regulation A , 1-K/A: Amendment to Annual Report Pursuant to Regulation A
export enum SUBMISSION_TYPE {
  '1-K' = '1-K',
  '1-K/A' = '1-K/A',
}

// FORM_INDICATION_TYPE ...
export enum FORM_INDICATION_TYPE {
  'Annual Report' = 'Annual Report',
  'Special Financial Report for the fiscal year' = 'Special Financial Report for the fiscal year',
}

// TypeScriptComplexType (TypeScript) ISSUER_CREDENTIALS_TYPE is These elements are part of the ISSUER_CREDENTIALS_TYPE group
export interface ISSUER_CREDENTIALS_TYPE {
  cik: string;
  ccc: common.CCC_TYPE;
}

// TypeScriptComplexType (TypeScript) CO_ISSUER_CREDENTIALS_TYPE is These elements are part of the CO_ISSUER_CREDENTIALS_TYPE group
export interface CO_ISSUER_CREDENTIALS_TYPE {
  cik: common.CIK_TYPE;
  ccc: common.CCC_TYPE;
}

// TypeScriptComplexType (TypeScript) FILER_TYPE is These elements are part of the FILER_TYPE group
export interface FILER_TYPE {
  issuerCredentials: ISSUER_CREDENTIALS_TYPE;
  fileNumber: common.FILE_NUMBER_TYPE_2;
  successorFileNumber: common.FILE_NUMBER_TYPE;
}

// TypeScriptComplexType (TypeScript) FLAGS_TYPE is These elements are part of the FLAGS_TYPE group
export interface FLAGS_TYPE {
  shellCompanyFlag: common.YES_NO_TYPE;
  confirmingCopyFlag: common.TRUE_FALSE_TYPE;
  successorFilingFlag: common.YES_NO_TYPE;
  returnCopyFlag: common.TRUE_FALSE_TYPE;
  overrideInternetFlag: common.TRUE_FALSE_TYPE;
}

// TypeScriptComplexType (TypeScript) CONTACT_TYPE is These elements are part of the CONTACT_TYPE group
export interface CONTACT_TYPE {
  contactName: common.NAME_TYPE;
  contactPhone: common.PHONE_TYPE;
  contactEmail: common.INTERNET_ADDRESS_TYPE;
}

// TypeScriptComplexType (TypeScript) NOTIFICATIONS_TYPE is These elements are part of the NOTIFICATIONS_TYPE group
export interface NOTIFICATIONS_TYPE {
  notificationEmail: Array<common.INTERNET_ADDRESS_TYPE>;
}

// TypeScriptComplexType (TypeScript) CO_FILER_TYPE is These elements are part of the CO_FILER_TYPE group
export interface CO_FILER_TYPE {
  coIssuerCredentials: CO_ISSUER_CREDENTIALS_TYPE;
  fileNumber: common.FILE_NUMBER_TYPE_2;
}

// TypeScriptComplexType (TypeScript) FILER_INFO_TYPE is These elements are part of the FILER_INFO_TYPE group
export interface FILER_INFO_TYPE {
  liveTestFlag: common.LIVE_TEST_TYPE;
  filer: FILER_TYPE;
  flags: FLAGS_TYPE;
  reportingPeriod: common.DATE_TYPE;
  contact: CONTACT_TYPE;
  notifications: NOTIFICATIONS_TYPE;
}

// TypeScriptComplexType (TypeScript) CO_ISSUER_INFO_TYPE is These elements are part of the CO_ISSUER_INFO_TYPE group
export interface CO_ISSUER_INFO_TYPE {
  'co-filer': Array<CO_FILER_TYPE>;
}

// TypeScriptComplexType (TypeScript) ITEM1_TYPE is These elements are part of the ITEM1_TYPE group
export interface ITEM1_TYPE {
  formIndication: string;
  fiscalYearEnd: common.DATE_TYPE;
  street1: common.STREET_TYPE;
  street2: common.STREET_TYPE;
  city: common.STRING_30_TYPE;
  stateOrCountry: string;
  zipCode: common.ZIP_TYPE;
  phoneNumber: common.PHONE_TYPE;
  issuedSecuritiesTitle: Array<common.STRING_255_TYPE>;
}

// TypeScriptComplexType (TypeScript) ITEM1_INFO_TYPE is These elements are part of the ITEM1_INFO_TYPE group
export interface ITEM1_INFO_TYPE {
  issuerName: common.STRING_150_TYPE;
  cik: common.CIK_TYPE;
  jurisdictionOrganization: string;
  irsNum: string;
}

// TypeScriptComplexType (TypeScript) ITEM_2_TYPE is These elements are part of the ITEM_2_TYPE group
export interface ITEM_2_TYPE {
  regArule257: common.TRUE_FALSE_TYPE;
}

// TypeScriptComplexType (TypeScript) SUMMARY_INFO_TYPE is These elements are part of the SUMMARY_INFO_TYPE group
export interface SUMMARY_INFO_TYPE {
  commissionFileNumber: common.FILE_NUMBER_TYPE;
  offeringQualificationDate: common.DATE_TYPE;
  offeringCommenceDate: common.DATE_TYPE;
  qualifiedSecuritiesSold: number;
  offeringSecuritiesSold: number;
  pricePerSecurity: number;
  aggregrateOfferingPrice: number;
  aggregrateOfferingPriceHolders: number;
  underwrittenSpName: Array<common.STRING_150_TYPE>;
  underwriterFees: number;
  salesCommissionsSpName: Array<common.STRING_150_TYPE>;
  salesCommissionsFee: number;
  findersSpName: Array<common.STRING_150_TYPE>;
  findersFees: number;
  auditorSpName: Array<common.STRING_150_TYPE>;
  auditorFees: number;
  legalSpName: Array<common.STRING_150_TYPE>;
  legalFees: number;
  promoterSpName: Array<common.STRING_150_TYPE>;
  promotersFees: number;
  blueSkySpName: Array<common.STRING_150_TYPE>;
  blueSkyFees: number;
  crdNumberBrokerDealer: common.CRD_NUMBER_TYPE;
  issuerNetProceeds: number;
  clarificationResponses: common.STRING_255_TYPE;
}

// TypeScriptComplexType (TypeScript) HEADER_DATA is These elements are part of the HEADER_DATA_TYPE group
export interface HEADER_DATA {
  submissionType: string;
  filerInfo: FILER_INFO_TYPE;
  coIssuerInfo: CO_ISSUER_INFO_TYPE;
}

// TypeScriptComplexType (TypeScript) FORM_DATA is These elements are part of the FORM_DATA_TYPE group
export interface FORM_DATA {
  item1: ITEM1_TYPE;
  item1Info: Array<ITEM1_INFO_TYPE>;
  item2: ITEM_2_TYPE;
  summaryInfo: Array<SUMMARY_INFO_TYPE>;
}

// TypeScriptComplexType (TypeScript) EdgarSubmission ...
export interface EdgarSubmissionRegA1K {
  schemaVersion: common.SCHEMA_VERSION_TYPE;
  headerData: HEADER_DATA;
  formData: FORM_DATA;
  documents: common.EDGAR_DOCUMENTS_TYPE;
}
