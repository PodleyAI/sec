// Code generated by xgen. DO NOT EDIT.

import * as common from './common';

// SUBMISSION_TYPE is Enumerated values and descriptions: 1-Z: Exit report under Regulation A , 1-Z/A: Amendment to exit report under Regulation A
export enum SUBMISSION_TYPE {
  '1-Z' = '1-Z',
  '1-Z/A' = '1-Z/A',
}

// TypeScriptComplexType (TypeScript) ISSUER_CREDENTIALS_TYPE is These elements are part of the ISSUER_CREDENTIALS_TYPE group
export interface ISSUER_CREDENTIALS_TYPE {
  cik: string;
  ccc: common.CCC_TYPE;
}

// TypeScriptComplexType (TypeScript) CO_ISSUER_CREDENTIALS_TYPE is These elements are part of the CO_ISSUER_CREDENTIALS_TYPE group
export interface CO_ISSUER_CREDENTIALS_TYPE {
  cik: common.CIK_TYPE;
  ccc: common.CCC_TYPE;
}

// TypeScriptComplexType (TypeScript) FILER_TYPE is These elements are part of the FILER_TYPE group
export interface FILER_TYPE {
  issuerCredentials: ISSUER_CREDENTIALS_TYPE;
  fileNumber: common.FILE_NUMBER_TYPE;
  successorFileNumber: common.FILE_NUMBER_TYPE;
}

// TypeScriptComplexType (TypeScript) FLAGS_TYPE is These elements are part of the FLAGS_TYPE group
export interface FLAGS_TYPE {
  confirmingCopyFlag: common.TRUE_FALSE_TYPE;
  successorFilingFlag: common.YES_NO_TYPE;
  returnCopyFlag: common.TRUE_FALSE_TYPE;
  overrideInternetFlag: common.TRUE_FALSE_TYPE;
}

// TypeScriptComplexType (TypeScript) CONTACT_TYPE is These elements are part of the CONTACT_TYPE group
export interface CONTACT_TYPE {
  contactName: common.NAME_TYPE;
  contactPhone: common.PHONE_TYPE;
  contactEmailAddress: common.INTERNET_ADDRESS_TYPE;
}

// TypeScriptComplexType (TypeScript) NOTIFICATIONS_TYPE is These elements are part of the NOTIFICATIONS_TYPE group
export interface NOTIFICATIONS_TYPE {
  notificationEmail: Array<common.INTERNET_ADDRESS_TYPE>;
}

// TypeScriptComplexType (TypeScript) CO_FILER_TYPE is These elements are part of the CO_FILER_TYPE group
export interface CO_FILER_TYPE {
  coIssuerCredentials: CO_ISSUER_CREDENTIALS_TYPE;
  fileNumber: common.FILE_NUMBER_TYPE_2;
}

// TypeScriptComplexType (TypeScript) FILER_INFO_TYPE is These elements are part of the FILER_INFO_TYPE group
export interface FILER_INFO_TYPE {
  liveTestFlag: common.LIVE_TEST_TYPE;
  filer: FILER_TYPE;
  flags: FLAGS_TYPE;
  contact: CONTACT_TYPE;
  notifications: NOTIFICATIONS_TYPE;
}

// TypeScriptComplexType (TypeScript) CO_ISSUER_INFO_TYPE is These elements are part of the CO_ISSUER_INFO_TYPE group
export interface CO_ISSUER_INFO_TYPE {
  'co-filer': Array<CO_FILER_TYPE>;
}

// TypeScriptComplexType (TypeScript) ITEM1_TYPE is These elements are part of the ITEM1_TYPE group
export interface ITEM1_TYPE {
  issuerName: common.STRING_150_TYPE;
  street1: common.STREET_TYPE;
  street2: common.STREET_TYPE;
  city: common.STRING_30_TYPE;
  stateOrCountry: string;
  zipCode: common.ZIP_TYPE;
  phone: common.PHONE_TYPE;
  commissionFileNumber: Array<common.FILE_NUMBER_TYPE>;
}

// TypeScriptComplexType (TypeScript) SUMMARY_INFO_OFFERING_TYPE is These elements are part of the SUMMARY_INFO_OFFERING_TYPE group
export interface SUMMARY_INFO_OFFERING_TYPE {
  offeringQualificationDate: common.DATE_TYPE;
  offeringCommenceDate: common.DATE_TYPE;
  offeringSecuritiesQualifiedSold: number;
  offeringSecuritiesSold: number;
  pricePerSecurity: number;
  portionSecuritiesSoldIssuer: number;
  portionSecuritiesSoldSecurityholders: number;
  underwrittenSpName: Array<common.STRING_150_TYPE>;
  underwriterFees: number;
  salesCommissionsSpName: Array<common.STRING_150_TYPE>;
  salesCommissionsFee: number;
  findersSpName: Array<common.STRING_150_TYPE>;
  findersFees: number;
  auditorSpName: Array<common.STRING_150_TYPE>;
  auditorFees: number;
  legalSpName: Array<common.STRING_150_TYPE>;
  legalFees: number;
  promoterSpName: Array<common.STRING_150_TYPE>;
  promotersFees: number;
  blueSkySpName: Array<common.STRING_150_TYPE>;
  blueSkyFees: number;
  crdNumberBrokerDealer: common.CRD_NUMBER_TYPE;
  issuerNetProceeds: number;
  clarificationResponses: common.STRING_255_TYPE;
}

// TypeScriptComplexType (TypeScript) CERTIFICATION_SUSPENSION_TYPE is These elements are part of the CERTIFICATION_SUSPENSION_TYPE group
export interface CERTIFICATION_SUSPENSION_TYPE {
  securitiesClassTitle: common.STRING_255_TYPE;
  certificationFileNumber: Array<common.FILE_NUMBER_TYPE>;
  approxRecordHolders: number;
}

// TypeScriptComplexType (TypeScript) SIGNATURE_TAB_TYPE is These elements are part of the SIGNATURE_TAB_TYPE group
export interface SIGNATURE_TAB_TYPE {
  cik: common.CIK_TYPE;
  regulationIssuerName1: common.STRING_150_TYPE;
  regulationIssuerName2: common.STRING_150_TYPE;
  signatureBy: common.STRING_150_TYPE;
  date: common.DATE_TYPE;
  title: common.STRING_255_TYPE;
}

// TypeScriptComplexType (TypeScript) HEADER_DATA is These elements are part of the HEADER_DATA_TYPE group
export interface HEADER_DATA {
  submissionType: string;
  filerInfo: FILER_INFO_TYPE;
  coIssuerInfo: CO_ISSUER_INFO_TYPE;
}

// TypeScriptComplexType (TypeScript) FORM_DATA is These elements are part of the FORM_DATA_TYPE group
export interface FORM_DATA {
  item1: ITEM1_TYPE;
  summaryInfoOffering: Array<SUMMARY_INFO_OFFERING_TYPE>;
  certificationSuspension: Array<CERTIFICATION_SUSPENSION_TYPE>;
  signatureTab: Array<SIGNATURE_TAB_TYPE>;
}

// TypeScriptComplexType (TypeScript) EdgarSubmission ...
export interface EdgarSubmissionRegA1Z {
  schemaVersion: common.SCHEMA_VERSION_TYPE;
  headerData: HEADER_DATA;
  formData: FORM_DATA;
}
